{"version":3,"sources":["components/NoteCard.js","pages/Notes.js","pages/Create.js","img/image.png","components/Layout.js","App.js","index.js"],"names":["useStyles","makeStyles","avatar","backgroundColor","note","postId","yellow","green","pink","blue","NoteCard","handelDelete","classes","Card","elevation","CardHeader","Avatar","className","action","IconButton","onClick","id","DeleteOutlined","title","name","subheader","email","CardContent","Typography","variant","color","body","Notes","useState","notes","setNotes","useEffect","fetch","then","response","json","newnotes","filter","Container","breakpointCols","default","1100","700","columnClassName","map","item","field","marginTop","marginBottom","display","Create","setTitle","details","setDetails","titleError","setTitleError","detailsError","setDetailsError","category","setCategory","size","component","gutterBottom","noValidate","autoComplete","onSubmit","e","preventDefault","console","log","TextField","onChange","target","value","label","fullWidth","required","error","multiline","rows","FormControl","FormLabel","RadioGroup","FormControlLabel","control","Radio","Button","type","endIcon","theme","page","background","width","padding","drawer","drawerPaper","root","active","appbar","date","flexGrow","marginLeft","Layout","children","history","useHistory","location","useLocation","menuItems","text","icon","SubjectOutlined","path","AddCircleOutline","AppBar","Toolbar","format","Date","src","image","Drawer","anchor","paper","List","ListItem","button","push","pathname","ListItemIcon","ListItemText","primary","App","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e249d40d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { Avatar, IconButton, Typography } from '@material-ui/core';\r\nimport { DeleteOutlined } from '@material-ui/icons';\r\nimport { blue, green, pink, yellow } from '@material-ui/core/colors';\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    avatar : {\r\n        backgroundColor:(note) => {\r\n            if(note.postId == 1){\r\n                return yellow[700]\r\n            }\r\n            if(note.postId == 2){\r\n                return green[500]\r\n            }\r\n            if(note.postId == 3){\r\n                return pink[500]\r\n            }\r\n            return blue[500 ]\r\n        }\r\n    }\r\n})\r\n\r\nconst NoteCard = ({note, handelDelete}) => {\r\n\r\n    const classes = useStyles(note)\r\n\r\n    return ( \r\n        <Card elevation={2} >\r\n            <CardHeader \r\n                avatar={\r\n                    <Avatar className={classes.avatar}>\r\n                        {note.postId}\r\n                    </Avatar>\r\n                }\r\n                action={\r\n                    <IconButton onClick={()=> handelDelete(note.id)}>\r\n                        <DeleteOutlined />\r\n                    </IconButton>\r\n                }\r\n                title={note.name}\r\n                subheader={note.email}\r\n            />\r\n\r\n            <CardContent>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                    {note.body}\r\n                </Typography>\r\n            </CardContent>\r\n        </Card>\r\n     );\r\n}\r\n \r\nexport default NoteCard;","import React, { useEffect, useState } from 'react'\nimport  Grid  from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\n\nimport NoteCard from '../components/NoteCard';\nimport Masonry from 'react-masonry-css';\n\n\nexport default function Notes() {\n  const [notes, setNotes] = useState([]);\n  \n  useEffect(()=>{\n    fetch('https://jsonplaceholder.typicode.com/comments')\n    .then(response => response.json())\n    .then(json => setNotes(json))\n  },[])\n\n  const handelDelete = (id) => {\n\n    const newnotes = notes.filter(note => note.id!=id);\n    setNotes(newnotes);\n    \n  }\n\n  const breakpoints ={\n    default : 3,\n    1100 : 2,\n    700 : 1\n  }\n\n  return (\n    <Container>\n      <Masonry\n        breakpointCols = {breakpoints}\n        className = \"my-masonry-grid\"\n        columnClassName = \"my-masonry-grid_column\"\n      >\n      {notes.map(note => (\n        <div item key={note.id}> \n          <NoteCard note={note} handelDelete={handelDelete} />\n        </div>\n\n      ))}\n     </Masonry>\n    </Container>\n  )\n}","import React, { useState } from 'react'\n\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport Container from '@material-ui/core/Container'\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight'\nimport { makeStyles } from '@material-ui/core'\nimport TextField from '@material-ui/core/TextField'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormLabel from '@material-ui/core/FormLabel'\n\nconst useStyles = makeStyles({\n  field: {\n    marginTop: 20,\n    marginBottom: 20,\n    display: 'block'\n  }\n})\n\nexport default function Create() {\n  const classes = useStyles()\n  const [title, setTitle] = useState('')\n  const [details, setDetails] = useState('')\n  const [titleError, setTitleError] = useState(false)\n  const [detailsError, setDetailsError] = useState(false)\n  const [category, setCategory] = useState('money')\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    setTitleError(false)\n    setDetailsError(false)\n\n    if (title == '') {\n      setTitleError(true)\n    }\n    if (details == '') {\n      setDetailsError(true)\n    }\n    if (title && details) {\n      console.log(title, details, category)\n    } \n  }\n\n  return (\n    <Container size=\"sm\">\n      <Typography\n        variant=\"h6\" \n        color=\"textSecondary\"\n        component=\"h2\"\n        gutterBottom\n      >\n        Create a New Note\n      </Typography>\n      \n      <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n        <TextField className={classes.field}\n          onChange={(e) => setTitle(e.target.value)}\n          label=\"Note Title\" \n          variant=\"outlined\" \n          color=\"secondary\" \n          fullWidth\n          required\n          error={titleError}\n        />\n        <TextField className={classes.field}\n          onChange={(e) => setDetails(e.target.value)}\n          label=\"Details\"\n          variant=\"outlined\"\n          color=\"secondary\"\n          multiline\n          rows={4}\n          fullWidth\n          required\n          error={detailsError}\n        />\n\n        {/* <Radio value=\"hello\" />\n        <Radio value=\"goodbye\" /> */}\n\n        <FormControl className={classes.field}>\n          <FormLabel>Note Category</FormLabel>\n          <RadioGroup value={category} onChange={(e) => setCategory(e.target.value)}>\n            <FormControlLabel value=\"money\" control={<Radio />} label=\"Money\" />\n            <FormControlLabel value=\"todos\" control={<Radio />} label=\"Todos\" />\n            <FormControlLabel value=\"reminders\" control={<Radio />} label=\"Reminders\" />\n            <FormControlLabel value=\"work\" control={<Radio />} label=\"Work\" />\n          </RadioGroup>\n        </FormControl>\n\n        <Button\n          type=\"submit\" \n          color=\"secondary\" \n          variant=\"contained\"\n          endIcon={<KeyboardArrowRightIcon />}>\n          Submit\n        </Button>\n      </form>\n\n      \n    </Container>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/image.a10992f6.png\";","import { makeStyles } from '@material-ui/styles';\r\nimport React from 'react';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { AddCircleOutline, SubjectOutlined } from '@material-ui/icons';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { format } from 'date-fns';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nimport image from '../img/image.png';\r\n\r\n\r\n\r\nconst drawerWidth = 240\r\n\r\n\r\nconst useStyles = makeStyles( (theme) => {\r\n    return{\r\n        page:{\r\n            background:\"#f9f9f9\",\r\n            width : '100%',\r\n            padding : 20,\r\n            marginTop:60,\r\n        },\r\n        drawer:{\r\n            width : drawerWidth\r\n        },\r\n        drawerPaper:{\r\n            width : drawerWidth\r\n        },\r\n        root : {\r\n            display:\"flex\"\r\n        },\r\n        active : {\r\n            background : \"#f4f4f4\"\r\n        },\r\n        title : {\r\n            padding:16\r\n        },\r\n        appbar : {\r\n            width : `calc(100% - ${drawerWidth}px)`,\r\n            background : \"white\",\r\n            color : \"black\"\r\n        },\r\n        date : {\r\n            flexGrow : 1\r\n        },\r\n        avatar : {\r\n            marginLeft:16\r\n        }\r\n       \r\n    }\r\n})\r\n\r\nexport default function Layout({children}) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n\r\n    const menuItems = [\r\n        {\r\n            text:'My Notes',\r\n            icon:<SubjectOutlined color=\"secondary\"/>,\r\n            path:'/'\r\n        },\r\n        {\r\n            text:'Create Note',\r\n            icon:<AddCircleOutline color=\"secondary\"/>,\r\n            path:'/create'\r\n        }\r\n\r\n    ]\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {/* appBar */}\r\n\r\n            <AppBar className={classes.appbar} elevation={0}>\r\n                <Toolbar>\r\n                    <Typography className={classes.date}>\r\n                       Today is the { format(new Date(), 'do MMMM Y') }\r\n                    </Typography>\r\n                    <Typography>\r\n                        Basava\r\n                    </Typography>\r\n                    <Avatar src={image} className={classes.avatar} />\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            {/* sideDrawer */}\r\n            <Drawer \r\n                className={classes.drawer}\r\n                variant = \"permanent\"\r\n                anchor = \"left\"\r\n                classes={{paper:classes.drawerPaper}}\r\n            >\r\n                <div>\r\n                    <Typography variant = \"h5\" className={classes.title}>\r\n                        My Notes\r\n                    </Typography>\r\n                </div>\r\n                {/* list link */}\r\n\r\n                <List>\r\n                    {menuItems.map(item => (\r\n                        <ListItem\r\n                            button\r\n                            key={item.text}\r\n                            onClick = {() => history.push(item.path)}\r\n                            className = {location.pathname == item.path ? classes.active : null}\r\n                        >\r\n                            <ListItemIcon>{item.icon}</ListItemIcon>\r\n                            <ListItemText primary={item.text} />\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n                    \r\n            </Drawer>\r\n            \r\n            <div className={classes.page}>\r\n                \r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Notes from './pages/Notes'\nimport Create from './pages/Create'\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core'\nimport { purple } from '@material-ui/core/colors'\nimport Layout from './components/Layout'\n\n// const theme = createMuiTheme({\n//   palette: {\n//     primary: {\n//       main: '#fefefe'\n//     },\n//     secondary: purple\n//   },\n//   typography: {\n//     fontFamily: 'Quicksand',                 TO Change the Theme of Material UI\n//     fontWeightLight: 400,\n//     fontWeightRegular: 500,              \n//     fontWeightMedium: 600,\n//     fontWeightBold: 700,\n//   }\n// })\n\nfunction App() {\n  return (\n    \n      <Router>\n        <Layout>\n          <Switch>\n            <Route exact path=\"/\">\n              <Notes />\n            </Route>\n            <Route path=\"/create\">\n              <Create />\n            </Route>\n          </Switch>\n        </Layout>\n      </Router>\n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}